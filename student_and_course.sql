CREATE DATABASE STUDENTS;
USE STUDENTS;

CREATE TABLE STUDENTS (
    STUDENT_ID INT PRIMARY KEY,
    STUDENT_NAME VARCHAR(100) NOT NULL
);

CREATE TABLE COURSES (
    COURSE_ID INT PRIMARY KEY,
    COURSE_NAME VARCHAR(100) NOT NULL
);

CREATE TABLE STUDENT_COURSE (
    COURSE_ID INT,
    STUDENT_ID INT,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSES(COURSE_ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENTS(STUDENT_ID)
);

INSERT INTO STUDENTS (STUDENT_ID, STUDENT_NAME) VALUES 
(1,'SARA'),
(2,'KRISH'),
(3,'SATZ');


INSERT INTO COURSES (COURSE_ID, COURSE_NAME) VALUES 
(1,'JAVA'),
(2,'REACT_JS'),
(3,'PHP'),
(4,'SQL');

 
INSERT INTO STUDENT_COURSE (STUDENT_ID, COURSE_ID) VALUES 
(1,2),
(2,1),
(3,3),
(1,1),
(3,2);

--1
SELECT S.STUDENT_NAME
FROM STUDENTS S
JOIN STUDENT_COURSE SC ON S.STUDENT_ID = SC.STUDENT_ID
JOIN COURSES C ON SC.COURSE_ID = C.COURSE_ID
WHERE COURSE_NAME = 'JAVA';  

//2
SELECT C.COURSE_NAME
FROM COURSES C
JOIN STUDENT_COURSE SC ON C.COURSE_ID = SC.COURSE_ID
JOIN STUDENTS S ON SC.STUDENT_ID = S.STUDENT_ID
WHERE S.STUDENT_NAME = 'SARA'; 


//3
SELECT C.COURSE_NAME , COUNT(SC.STUDENT_ID) AS STUDENTCOUNT
FROM COURSES C
LEFT JOIN STUDENT_COURSE SC ON C.COURSE_ID = SC.COURSE_ID
GROUP BY C.COURSE_NAME;


//4
SELECT S.STUDENT_NAME 
FROM STUDENTS S
JOIN STUDENT_COURSE SC ON SC.STUDENT_ID = S.STUDENT_ID
GROUP BY S.STUDENT_NAME
HAVING COUNT(SC.COURSE_ID)>1; 


//5
SELECT COURSE_NAME 
FROM COURSES c 
LEFT JOIN STUDENT_COURSE SC ON C.COURSE_ID = SC.COURSE_ID
WHERE SC.STUDENT_ID IS NULL; 
